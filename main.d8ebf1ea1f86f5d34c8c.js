(self.webpackChunkbuck_dice=self.webpackChunkbuck_dice||[]).push([[179],{43:(e,r,t)=>{"use strict";t.d(r,{Z:()=>i});var n=t(645),a=t.n(n)()((function(e){return e[1]}));a.push([e.id,'.held-die-list .die-item {\r\n    background-color: blueviolet;\r\n}\r\n\r\n.die-list {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr;\r\n    height: 6rem;\r\n    list-style-type: none;\r\n    transform-style: preserve-3d;\r\n    width: 6rem;\r\n}\r\n\r\n.even-roll {\r\n    transition: transform 1.5s ease-out;\r\n}\r\n\r\n.odd-roll {\r\n    transition: transform 1.25s ease-out;\r\n}\r\n\r\n.die-item {\r\n    background-color: #fefefe;\r\n    box-shadow: inset -0.35rem 0.35rem 0.75rem rgba(0, 0, 0, 0.3),\r\n    inset 0.5rem -0.25rem 0.5rem rgba(0, 0, 0, 0.15);\r\n    display: grid;\r\n    grid-column: 1;\r\n    grid-row: 1;\r\n    grid-template-areas:\r\n    "one two three"\r\n    "four five six"\r\n    "seven eight nine";\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows: repeat(3, 1fr);\r\n    height: 100%;\r\n    padding: 1rem;\r\n    width: 100%;\r\n}\r\n\r\n.dot {\r\n    align-self: center;\r\n    background-color: #676767;\r\n    border-radius: 50%;\r\n    box-shadow: inset -0.15rem 0.15rem 0.25rem rgba(0, 0, 0, 0.5);\r\n    display: block;\r\n    height: 1.25rem;\r\n    justify-self: center;\r\n    width: 1.25rem;\r\n}\r\n\r\n.even-roll[data-roll="1"] {\r\n    transform: rotateX(360deg) rotateY(720deg) rotateZ(360deg);\r\n}\r\n\r\n.even-roll[data-roll="2"] {\r\n    transform: rotateX(450deg) rotateY(720deg) rotateZ(360deg);\r\n}\r\n\r\n.even-roll[data-roll="3"] {\r\n    transform: rotateX(360deg) rotateY(630deg) rotateZ(360deg);\r\n}\r\n\r\n.even-roll[data-roll="4"] {\r\n    transform: rotateX(360deg) rotateY(810deg) rotateZ(360deg);\r\n}\r\n\r\n.even-roll[data-roll="5"] {\r\n    transform: rotateX(270deg) rotateY(720deg) rotateZ(360deg);\r\n}\r\n\r\n.even-roll[data-roll="6"] {\r\n    transform: rotateX(360deg) rotateY(900deg) rotateZ(360deg);\r\n}\r\n\r\n.odd-roll[data-roll="1"] {\r\n    transform: rotateX(-360deg) rotateY(-720deg) rotateZ(-360deg);\r\n}\r\n\r\n.odd-roll[data-roll="2"] {\r\n    transform: rotateX(-270deg) rotateY(-720deg) rotateZ(-360deg);\r\n}\r\n\r\n.odd-roll[data-roll="3"] {\r\n    transform: rotateX(-360deg) rotateY(-810deg) rotateZ(-360deg);\r\n}\r\n\r\n.odd-roll[data-roll="4"] {\r\n    transform: rotateX(-360deg) rotateY(-630deg) rotateZ(-360deg);\r\n}\r\n\r\n.odd-roll[data-roll="5"] {\r\n    transform: rotateX(-450deg) rotateY(-720deg) rotateZ(-360deg);\r\n}\r\n\r\n.odd-roll[data-roll="6"] {\r\n    transform: rotateX(-360deg) rotateY(-900deg) rotateZ(-360deg);\r\n}\r\n\r\n[data-side="1"] {\r\n    transform: rotate3d(0, 0, 0, 90deg) translateZ(4rem);\r\n}\r\n\r\n[data-side="2"] {\r\n    transform: rotate3d(-1, 0, 0, 90deg) translateZ(4rem);\r\n}\r\n\r\n[data-side="3"] {\r\n    transform: rotate3d(0, 1, 0, 90deg) translateZ(4rem);\r\n}\r\n\r\n[data-side="4"] {\r\n    transform: rotate3d(0, -1, 0, 90deg) translateZ(4rem);\r\n}\r\n\r\n[data-side="5"] {\r\n    transform: rotate3d(1, 0, 0, 90deg) translateZ(4rem);\r\n}\r\n\r\n[data-side="6"] {\r\n    transform: rotate3d(1, 0, 0, 180deg) translateZ(4rem);\r\n}\r\n\r\n[data-side="1"] .dot:nth-of-type(1) {\r\n    grid-area: five;\r\n}\r\n\r\n[data-side="2"] .dot:nth-of-type(1) {\r\n    grid-area: one;\r\n}\r\n\r\n[data-side="2"] .dot:nth-of-type(2) {\r\n    grid-area: nine;\r\n}\r\n\r\n[data-side="3"] .dot:nth-of-type(1) {\r\n    grid-area: one;\r\n}\r\n\r\n[data-side="3"] .dot:nth-of-type(2) {\r\n    grid-area: five;\r\n}\r\n\r\n[data-side="3"] .dot:nth-of-type(3) {\r\n    grid-area: nine;\r\n}\r\n\r\n[data-side="4"] .dot:nth-of-type(1) {\r\n    grid-area: one;\r\n}\r\n\r\n[data-side="4"] .dot:nth-of-type(2) {\r\n    grid-area: three;\r\n}\r\n\r\n[data-side="4"] .dot:nth-of-type(3) {\r\n    grid-area: seven;\r\n}\r\n\r\n[data-side="4"] .dot:nth-of-type(4) {\r\n    grid-area: nine;\r\n}\r\n\r\n[data-side="5"] .dot:nth-of-type(1) {\r\n    grid-area: one;\r\n}\r\n\r\n[data-side="5"] .dot:nth-of-type(2) {\r\n    grid-area: three;\r\n}\r\n\r\n[data-side="5"] .dot:nth-of-type(3) {\r\n    grid-area: five;\r\n}\r\n\r\n[data-side="5"] .dot:nth-of-type(4) {\r\n    grid-area: seven;\r\n}\r\n\r\n[data-side="5"] .dot:nth-of-type(5) {\r\n    grid-area: nine;\r\n}\r\n\r\n[data-side="6"] .dot:nth-of-type(1) {\r\n    grid-area: one;\r\n}\r\n\r\n[data-side="6"] .dot:nth-of-type(2) {\r\n    grid-area: three;\r\n}\r\n\r\n[data-side="6"] .dot:nth-of-type(3) {\r\n    grid-area: four;\r\n}\r\n\r\n[data-side="6"] .dot:nth-of-type(4) {\r\n    grid-area: six;\r\n}\r\n\r\n[data-side="6"] .dot:nth-of-type(5) {\r\n    grid-area: seven;\r\n}\r\n\r\n[data-side="6"] .dot:nth-of-type(6) {\r\n    grid-area: nine;\r\n}\r\n\r\n@media (min-width: 900px) {\r\n    .dice {\r\n        perspective: 1300px;\r\n    }\r\n}',""]);const i=a},645:e=>{"use strict";e.exports=function(e){var r=[];return r.toString=function(){return this.map((function(r){var t=e(r);return r[2]?"@media ".concat(r[2]," {").concat(t,"}"):t})).join("")},r.i=function(e,t,n){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(n)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var o=0;o<e.length;o++){var d=[].concat(e[o]);n&&a[d[0]]||(t&&(d[2]?d[2]="".concat(t," and ").concat(d[2]):d[2]=t),r.push(d))}},r}},552:e=>{e.exports='<ol class="die-list even-roll" data-roll="1" id="die-1"> <li class="die-item" data-side="1"> <span class="dot"></span> </li> <li class="die-item" data-side="2"> <span class="dot"></span> <span class="dot"></span> </li> <li class="die-item" data-side="3"> <span class="dot"></span> <span class="dot"></span> <span class="dot"></span> </li> <li class="die-item" data-side="4"> <span class="dot"></span> <span class="dot"></span> <span class="dot"></span> <span class="dot"></span> </li> <li class="die-item" data-side="5"> <span class="dot"></span> <span class="dot"></span> <span class="dot"></span> <span class="dot"></span> <span class="dot"></span> </li> <li class="die-item" data-side="6"> <span class="dot"></span> <span class="dot"></span> <span class="dot"></span> <span class="dot"></span> <span class="dot"></span> <span class="dot"></span> </li> </ol>'},864:(e,r,t)=>{"use strict";var n=t(552),a=t.n(n),i=t(43);class s extends HTMLElement{constructor(){super();const e=this.attachShadow({mode:"open"});e.innerHTML=a();const r=document.createElement("style");r.innerText=i.Z,e.appendChild(r)}roll(){const e=this.shadowRoot.getElementById("die-1");e.classList.toggle("odd-roll"),e.classList.toggle("even-roll");const r=s.getRandomNumber(1,6);e.dataset.roll=r}get value(){return this.shadowRoot.getElementById("die-1").dataset.roll}static getRandomNumber(e,r){return e=Math.ceil(e),r=Math.floor(r),Math.floor(Math.random()*(r-e+1))+e}makeSmaller(){this.shadowRoot.getElementById("die-1").classList.add("held-die-list")}makeBigger(){this.shadowRoot.getElementById("die-1").classList.remove("held-die-list")}}class o{constructor(e){this.controller=e,this.diceContainer=document.getElementById("dice-container"),this.textContainer=document.getElementById("text-container"),this.rollButton=document.getElementById("roll-button")}renderForHumanDraw(){this.firstDie=document.createElement("die-block"),this.diceContainer.appendChild(this.firstDie),this.rollButton.onclick=()=>{this.firstDie.roll(),setTimeout((()=>this.controller.setPlayerInitialNumber()),1500)},this.rollButton.innerText="Roll to draw"}renderForAiDraw(){this.rollButton.disabled=!0,this.firstDie.roll(),setTimeout((()=>{this.controller.setAiInitialNumber(this.firstDie.value)}),1500)}prepareForGame(){this.firstDie.onclick=()=>this.onDieClicked(0),this.secondDie=document.createElement("die-block"),this.secondDie.onclick=()=>this.onDieClicked(1),this.thirdDie=document.createElement("die-block"),this.thirdDie.onclick=()=>this.onDieClicked(2),this.dice=[this.firstDie,this.secondDie,this.thirdDie],this.diceContainer.append(this.secondDie,this.thirdDie),this.textContainer.innerHTML='<p>Point number: <span id="point-number"></span></p>\n        <p>Human\'s score: <span id="human-score"></p>\n        <p>AI\'s score: <span id="ai-score"></p>\n        <p>Current player: <span id="current-player"></span></p>',this.humanScore=document.getElementById("human-score"),this.aiScore=document.getElementById("ai-score"),this.currentPlayer=document.getElementById("current-player"),this.pointNumber=document.getElementById("point-number"),this.heldDice=[!1,!1,!1],this.rollButton.onclick=()=>{this.rollDice(this.heldDice.map((e=>!e)))},this.rollButton.innerText="Roll"}updateState(){const e=this.controller;if(this.rollButton.disabled=e.currentPlayer===e.aiPlayer||e.winner,this.humanScore.innerText=e.humanPlayer.score,this.aiScore.innerText=e.aiPlayer.score,this.currentPlayer.innerText=e.currentPlayer.name,this.pointNumber.innerText=e.pointNumber,e.winner){const r=document.createElement("p");r.innerText=`WINNER: ${e.winner.name}`,this.textContainer.appendChild(r)}}onDiceRolled(){const e=this.firstDie.value,r=this.secondDie.value,t=this.thirdDie.value;this.controller.makeMove(e,r,t)}rollAllDice(){this.thirdDie.roll(),this.secondDie.roll(),this.firstDie.roll(),setTimeout((()=>this.onDiceRolled()),2e3)}rollDice(e){const r=[this.firstDie,this.secondDie,this.thirdDie];for(let t=0;t<3;t++)e[t]?(r[t].makeBigger(),r[t].roll()):r[t].makeSmaller();setTimeout((()=>this.onDiceRolled()),2e3)}getDiceValues(){return[this.firstDie.value,this.secondDie.value,this.thirdDie.value]}resetDieHold(){for(const e of this.dice)e.makeBigger();this.heldDice=[!1,!1,!1]}onDieClicked(e){this.controller.currentPlayer===this.controller.humanPlayer&&this.controller.humanPlayer.consecutiveMoves>0&&(this.heldDice[e]=!this.heldDice[e],!0===this.heldDice[e]?this.dice[e].makeSmaller():this.dice[e].makeBigger())}}class d{constructor(){this.view=new o(this),this.humanPlayer={score:0,name:"Human",consecutiveMoves:0,pass:!1},this.aiPlayer={score:0,name:"AI",consecutiveMoves:0,pass:!1}}startGame(){this.view.renderForHumanDraw()}setPlayerInitialNumber(e){this.initialPlayerNumber=e,this.view.renderForAiDraw()}setAiInitialNumber(e){this.view.prepareForGame(),e>this.initialPlayerNumber?(this.currentPlayer=this.aiPlayer,this.pointNumber=this.initialPlayerNumber,this.view.updateState(),this.decideOnAiMove()):(this.currentPlayer=this.humanPlayer,this.pointNumber=e,this.view.updateState()),console.log(this.pointNumber)}makeMove(e,r,t){const n=this.calculateScore(e,r,t);this.currentPlayer.consecutiveMoves++;const a=this.currentPlayer.score+n;a>=15?(this.winner=this.currentPlayer,this.currentPlayer.score=a,this.view.updateState()):(3===this.currentPlayer.consecutiveMoves&&(this.currentPlayer.score=a,this.currentPlayer.consecutiveMoves=0,this.currentPlayer=this.getNonCurrentPlayer(),this.view.resetDieHold()),this.view.updateState(),this.currentPlayer===this.aiPlayer&&this.decideOnAiMove())}calculateScore(e,r,t){const n=this.pointNumber;let a=0;return e==r&&r==t?a=e==n?15:5:(e==n&&a++,r==n&&a++,t==n&&a++),a}getNonCurrentPlayer(){return this.currentPlayer===this.humanPlayer?this.aiPlayer:this.humanPlayer}decideOnAiMove(){if(0===this.aiPlayer.consecutiveMoves)return void this.view.rollAllDice();let e=[!1,!1,!1],r=this.calculateScore(...this.view.getDiceValues());for(const t of this.getPossibleMoves()){const n=this.evaluatePossibleMove(t);n>r&&(e=t,r=n)}this.view.rollDice(e)}evaluatePossibleMove(e){let r=0,t=this.view.getDiceValues();for(let n=1;n<=6;n++){e[0]&&(t[0]=n);for(let n=1;n<=6;n++){e[1]&&(t[1]=n);for(let n=1;n<=6;n++)e[2]&&(t[2]=n),r+=1/216*this.calculateScore(...t)}}return r}getPossibleMoves(){const e=[];for(let r=0;r<8;r++)e.push([!!(4&r),!!(2&r),!!(1&r)]);return e}}onload=()=>{console.log("hello world!"),customElements.define("die-block",s),(new d).startGame()}}},0,[[864,666]]]);